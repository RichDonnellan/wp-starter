// Unit Conversion

// strip-unit($num)
//
// Strip units from values.
//
// $num       - Value to be stripped.
// @returns   - number
// @source    - http://hugogiraudel.com/2013/08/12/sass-functions

@function strip-units($num) {
  @return $num / ($num * 0 + 1);
}

// em()
//
//  Convert pixel values to ems.
//
// $target    - Value to convert to ems.
// $context   - The context the conversion is based on. Defaults to `$base-font-size`
// @requires  - `$base--font-size` / `@strip-units`
// @returns   - number
// @source    - http://www.pjmccormick.com/sweet-sass-function-convert-px-em

@function em($target, $context: $base--font-size) {
  @if not unitless($target) {
    $target: strip-units($target);
  }
  @if not unitless($context) {
    $context: strip-units($context);
  }
  @if $target == 0 { @return 0 }
    @return $target / $context + 0em;
}

// rem()
//
// Convert pixel values to rems.
//
// $target    - Value to convert to ems.
// $context   - The context the conversion is based on. Defaults to `$base-font-size`
// @requires  - `$base--font-size` / `@strip-units`
// @returns   - number
// @source    - http://www.pjmccormick.com/sweet-sass-function-convert-px-em

@function rem($target, $context: $base--font-size) {
  @if not unitless($target) {
    $target: strip-units($target);
  }
  @if not unitless($context) {
    $context: strip-units($context);
  }
  @if $target == 0 { @return 0 }
  @return $target / $context + 0rem;
}

// vw()
//
//  Convert pixel values to vws.
//
// $target    - Value to convert to vws
// $bp        - The context the conversion is based on. Use bp() to get breakpoint; defaults to xxl
// @returns   - number
// @source    - http://emilolsson.com/tools/vw-unit-calc-an-online-responsive-css-font-size-calculator/

@function vw($target, $bp: bp(xxl)) {
  $vw-context: ($bp * 0.01) * 1;
  @return ($target / $vw-context) * 1vw;
}
